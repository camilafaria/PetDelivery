/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 26 21:40:27 GMT 2017
 */

package br.com.petdelivery.jdbc.modelo;

import org.junit.Test;
import static org.junit.Assert.*;
import br.com.petdelivery.jdbc.modelo.Usuario;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Usuario_ESTest extends Usuario_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Usuario usuario0 = new Usuario();
      usuario0.setTelefone(818L);
      long long0 = usuario0.getTelefone();
      assertEquals(818L, long0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Usuario usuario0 = new Usuario();
      usuario0.setTelefone((-191L));
      long long0 = usuario0.getTelefone();
      assertEquals((-191L), long0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Usuario usuario0 = new Usuario();
      usuario0.setSenha("R&+m2wrm-H1;");
      String string0 = usuario0.getSenha();
      assertEquals("R&+m2wrm-H1;", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Usuario usuario0 = new Usuario();
      usuario0.setRua("S^/:@");
      String string0 = usuario0.getRua();
      assertEquals("S^/:@", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Usuario usuario0 = new Usuario();
      usuario0.setNumero(159);
      int int0 = usuario0.getNumero();
      assertEquals(159, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Usuario usuario0 = new Usuario();
      usuario0.setNome("S>b");
      String string0 = usuario0.getNome();
      assertEquals("S>b", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Usuario usuario0 = new Usuario();
      usuario0.setEmail("S^/:@");
      String string0 = usuario0.getEmail();
      assertEquals("S^/:@", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Usuario usuario0 = new Usuario();
      usuario0.setDdd(659);
      int int0 = usuario0.getDdd();
      assertEquals(659, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Usuario usuario0 = new Usuario();
      usuario0.setCpf(1L);
      long long0 = usuario0.getCpf();
      assertEquals(1L, long0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Usuario usuario0 = new Usuario();
      usuario0.setCpf((-371L));
      long long0 = usuario0.getCpf();
      assertEquals((-371L), long0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Usuario usuario0 = new Usuario();
      usuario0.setComplemento("");
      String string0 = usuario0.getComplemento();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Usuario usuario0 = new Usuario();
      usuario0.setCep("UE2+u:wcN= aGG");
      String string0 = usuario0.getCep();
      assertEquals("UE2+u:wcN= aGG", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Usuario usuario0 = new Usuario();
      usuario0.setBairro("[oeO4Ok[L|'K");
      String string0 = usuario0.getBairro();
      assertEquals("[oeO4Ok[L|'K", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Usuario usuario0 = new Usuario();
      usuario0.setBairro("");
      String string0 = usuario0.getBairro();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Usuario usuario0 = new Usuario();
      String string0 = usuario0.getCep();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Usuario usuario0 = new Usuario();
      usuario0.setCep("");
      String string0 = usuario0.getCep();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Usuario usuario0 = new Usuario();
      int int0 = usuario0.getNumero();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Usuario usuario0 = new Usuario();
      usuario0.setComplemento("!xZ9ef'YN");
      String string0 = usuario0.getComplemento();
      assertEquals("!xZ9ef'YN", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Usuario usuario0 = new Usuario();
      String string0 = usuario0.getSenha();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Usuario usuario0 = new Usuario();
      usuario0.setDdd((-96));
      int int0 = usuario0.getDdd();
      assertEquals((-96), int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Usuario usuario0 = new Usuario();
      usuario0.setEmail("");
      String string0 = usuario0.getEmail();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Usuario usuario0 = new Usuario();
      String string0 = usuario0.getEmail();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Usuario usuario0 = new Usuario();
      int int0 = usuario0.getDdd();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Usuario usuario0 = new Usuario();
      usuario0.setSenha("");
      String string0 = usuario0.getSenha();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Usuario usuario0 = new Usuario();
      long long0 = usuario0.getTelefone();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Usuario usuario0 = new Usuario();
      usuario0.setNumero((-1321));
      int int0 = usuario0.getNumero();
      assertEquals((-1321), int0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Usuario usuario0 = new Usuario();
      usuario0.setNome("");
      String string0 = usuario0.getNome();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Usuario usuario0 = new Usuario();
      long long0 = usuario0.getCpf();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Usuario usuario0 = new Usuario();
      usuario0.setRua("");
      String string0 = usuario0.getRua();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Usuario usuario0 = new Usuario();
      String string0 = usuario0.getBairro();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Usuario usuario0 = new Usuario();
      String string0 = usuario0.getComplemento();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Usuario usuario0 = new Usuario();
      String string0 = usuario0.getNome();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Usuario usuario0 = new Usuario();
      String string0 = usuario0.getRua();
      assertNull(string0);
  }
}
