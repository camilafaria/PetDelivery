/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 26 21:26:26 GMT 2017
 */

package br.com.petdelivery.jdbc.modelo;

import org.junit.Test;
import static org.junit.Assert.*;
import br.com.petdelivery.jdbc.modelo.Agenda_Servico;
import java.sql.Date;
import java.time.LocalDate;
import java.time.Period;
import java.time.chrono.IsoChronology;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.chrono.MockIsoChronology;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Agenda_Servico_ESTest extends Agenda_Servico_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Agenda_Servico agenda_Servico0 = new Agenda_Servico();
      agenda_Servico0.setDelivery(true);
      boolean boolean0 = agenda_Servico0.isDelivery();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Agenda_Servico agenda_Servico0 = new Agenda_Servico();
      agenda_Servico0.setObservacao("^zfF3\"T!E");
      String string0 = agenda_Servico0.getObservacao();
      assertEquals("^zfF3\"T!E", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Agenda_Servico agenda_Servico0 = new Agenda_Servico();
      Long long0 = new Long((-1L));
      agenda_Servico0.setId_usuario(long0);
      Long long1 = agenda_Servico0.getId_usuario();
      assertEquals((-1L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Agenda_Servico agenda_Servico0 = new Agenda_Servico();
      Long long0 = new Long(0L);
      agenda_Servico0.setId_usuario(long0);
      Long long1 = agenda_Servico0.getId_usuario();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Agenda_Servico agenda_Servico0 = new Agenda_Servico();
      Long long0 = new Long(241L);
      agenda_Servico0.setId_usuario(long0);
      Long long1 = agenda_Servico0.getId_usuario();
      assertEquals(241L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Agenda_Servico agenda_Servico0 = new Agenda_Servico();
      Long long0 = new Long(0L);
      agenda_Servico0.setId_servico(long0);
      Long long1 = agenda_Servico0.getId_servico();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Agenda_Servico agenda_Servico0 = new Agenda_Servico();
      Long long0 = new Long((-1361L));
      agenda_Servico0.setId_servico(long0);
      Long long1 = agenda_Servico0.getId_servico();
      assertEquals((-1361L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Agenda_Servico agenda_Servico0 = new Agenda_Servico();
      Long long0 = Long.getLong("", 0L);
      agenda_Servico0.setId_prestador(long0);
      Long long1 = agenda_Servico0.getId_prestador();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Agenda_Servico agenda_Servico0 = new Agenda_Servico();
      Long long0 = new Long(5158L);
      agenda_Servico0.setId_prestador(long0);
      Long long1 = agenda_Servico0.getId_prestador();
      assertEquals(5158L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Agenda_Servico agenda_Servico0 = new Agenda_Servico();
      Long long0 = new Long((-801L));
      agenda_Servico0.setId_prestador(long0);
      Long long1 = agenda_Servico0.getId_prestador();
      assertEquals((-801L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Agenda_Servico agenda_Servico0 = new Agenda_Servico();
      Long long0 = new Long((-2167L));
      agenda_Servico0.setId_animal(long0);
      Long long1 = agenda_Servico0.getId_animal();
      assertEquals((-2167L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Agenda_Servico agenda_Servico0 = new Agenda_Servico();
      Long long0 = new Long(0L);
      agenda_Servico0.setId_animal(long0);
      Long long1 = agenda_Servico0.getId_animal();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Agenda_Servico agenda_Servico0 = new Agenda_Servico();
      Long long0 = new Long(1049L);
      agenda_Servico0.setId_animal(long0);
      Long long1 = agenda_Servico0.getId_animal();
      assertEquals(1049L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Agenda_Servico agenda_Servico0 = new Agenda_Servico();
      Long long0 = new Long((-2493L));
      agenda_Servico0.setId_agendamento(long0);
      Long long1 = agenda_Servico0.getId_agendamento();
      assertEquals((-2493L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Agenda_Servico agenda_Servico0 = new Agenda_Servico();
      Long long0 = new Long(241L);
      agenda_Servico0.setId_agendamento(long0);
      Long long1 = agenda_Servico0.getId_agendamento();
      assertEquals(241L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Agenda_Servico agenda_Servico0 = new Agenda_Servico();
      agenda_Servico0.setHoraInicio("T>!%767VuBV");
      String string0 = agenda_Servico0.getHoraInicio();
      assertEquals("T>!%767VuBV", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Agenda_Servico agenda_Servico0 = new Agenda_Servico();
      agenda_Servico0.setHoraFim("s4^+'DW-a,rtdIZG4");
      String string0 = agenda_Servico0.getHoraFim();
      assertEquals("s4^+'DW-a,rtdIZG4", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Agenda_Servico agenda_Servico0 = new Agenda_Servico();
      Period period0 = Period.ofWeeks((-1));
      IsoChronology isoChronology0 = period0.getChronology();
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0);
      Date date0 = Date.valueOf(localDate0);
      agenda_Servico0.setDataInicio(date0);
      Date date1 = agenda_Servico0.getDataInicio();
      assertSame(date1, date0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Agenda_Servico agenda_Servico0 = new Agenda_Servico();
      Date date0 = new Date(1267L);
      agenda_Servico0.setDataFim(date0);
      Date date1 = agenda_Servico0.getDataFim();
      assertSame(date1, date0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Agenda_Servico agenda_Servico0 = new Agenda_Servico();
      String string0 = agenda_Servico0.getHoraFim();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Agenda_Servico agenda_Servico0 = new Agenda_Servico();
      Long long0 = new Long(0L);
      agenda_Servico0.setId_agendamento(long0);
      Long long1 = agenda_Servico0.getId_agendamento();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Agenda_Servico agenda_Servico0 = new Agenda_Servico();
      Long long0 = agenda_Servico0.getId_agendamento();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Agenda_Servico agenda_Servico0 = new Agenda_Servico();
      Long long0 = agenda_Servico0.getId_servico();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Agenda_Servico agenda_Servico0 = new Agenda_Servico();
      Date date0 = agenda_Servico0.getDataFim();
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Agenda_Servico agenda_Servico0 = new Agenda_Servico();
      boolean boolean0 = agenda_Servico0.isDelivery();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Agenda_Servico agenda_Servico0 = new Agenda_Servico();
      String string0 = agenda_Servico0.getHoraInicio();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Agenda_Servico agenda_Servico0 = new Agenda_Servico();
      Long long0 = agenda_Servico0.getId_animal();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Agenda_Servico agenda_Servico0 = new Agenda_Servico();
      Long long0 = agenda_Servico0.getId_prestador();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Agenda_Servico agenda_Servico0 = new Agenda_Servico();
      agenda_Servico0.setObservacao("");
      String string0 = agenda_Servico0.getObservacao();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Agenda_Servico agenda_Servico0 = new Agenda_Servico();
      agenda_Servico0.setHoraInicio("");
      String string0 = agenda_Servico0.getHoraInicio();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Agenda_Servico agenda_Servico0 = new Agenda_Servico();
      String string0 = agenda_Servico0.getObservacao();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Agenda_Servico agenda_Servico0 = new Agenda_Servico();
      Long long0 = agenda_Servico0.getId_usuario();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Agenda_Servico agenda_Servico0 = new Agenda_Servico();
      Long long0 = new Long(1032L);
      agenda_Servico0.setId_servico(long0);
      Long long1 = agenda_Servico0.getId_servico();
      assertEquals(1032L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Agenda_Servico agenda_Servico0 = new Agenda_Servico();
      agenda_Servico0.setHoraFim("");
      String string0 = agenda_Servico0.getHoraFim();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Agenda_Servico agenda_Servico0 = new Agenda_Servico();
      Date date0 = agenda_Servico0.getDataInicio();
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Agenda_Servico agenda_Servico0 = new Agenda_Servico();
      Long long0 = new Long(1049L);
      agenda_Servico0.setId_usuario(long0);
      Long long1 = agenda_Servico0.getId_usuario();
      assertEquals(1049L, (long)long1);
  }
}
