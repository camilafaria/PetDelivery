/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 26 21:01:27 GMT 2017
 */

package br.com.petdelivery.controller;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import br.com.petdelivery.controller.IndexController;
import br.com.petdelivery.jdbc.modelo.Autonomo;
import br.com.petdelivery.jdbc.modelo.Petshop;
import br.com.petdelivery.jdbc.modelo.Prestador;
import br.com.petdelivery.jdbc.modelo.Usuario;
import javax.servlet.http.HttpSession;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class IndexController_ESTest extends IndexController_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      IndexController indexController0 = new IndexController();
      Prestador prestador0 = new Prestador();
      HttpSession httpSession0 = mock(HttpSession.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        indexController0.adicionaUsuarioPrestadorPetshop(prestador0, (Petshop) null, httpSession0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("br.com.petdelivery.controller.IndexController", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      IndexController indexController0 = new IndexController();
      Prestador prestador0 = new Prestador();
      Autonomo autonomo0 = new Autonomo();
      HttpSession httpSession0 = mock(HttpSession.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        indexController0.adicionaUsuarioPrestadorAutonomo(prestador0, autonomo0, httpSession0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.sql.SQLException: No suitable driver found for jdbc:mysql://null/null?useSSL=null
         //
         verifyException("br.com.petdelivery.jdbc.ConnectionFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      IndexController indexController0 = new IndexController();
      Prestador prestador0 = new Prestador();
      Petshop petshop0 = new Petshop();
      // Undeclared exception!
      try { 
        indexController0.adicionaUsuarioPrestadorPetshop(prestador0, petshop0, (HttpSession) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.sql.SQLException: No suitable driver found for jdbc:mysql://null/null?useSSL=null
         //
         verifyException("br.com.petdelivery.jdbc.ConnectionFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      IndexController indexController0 = new IndexController();
      String string0 = indexController0.registrarPetshop();
      assertEquals("preLogin/adiciona-prestador-petshop", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      IndexController indexController0 = new IndexController();
      Usuario usuario0 = new Usuario();
      HttpSession httpSession0 = mock(HttpSession.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        indexController0.adicionaUsuario(usuario0, httpSession0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.sql.SQLException: No suitable driver found for jdbc:mysql://null/null?useSSL=null
         //
         verifyException("br.com.petdelivery.jdbc.ConnectionFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      IndexController indexController0 = new IndexController();
      String string0 = indexController0.registrarUsuario();
      assertEquals("preLogin/adiciona-usuario", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      IndexController indexController0 = new IndexController();
      Prestador prestador0 = new Prestador();
      HttpSession httpSession0 = mock(HttpSession.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        indexController0.adicionaUsuarioPrestadorAutonomo(prestador0, (Autonomo) null, httpSession0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("br.com.petdelivery.controller.IndexController", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      IndexController indexController0 = new IndexController();
      String string0 = indexController0.index();
      assertEquals("index", string0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      IndexController indexController0 = new IndexController();
      String string0 = indexController0.listar();
      assertEquals("preLogin/lista", string0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      IndexController indexController0 = new IndexController();
      String string0 = indexController0.registrarAutonomo();
      assertEquals("preLogin/adiciona-prestador-autonomo", string0);
  }
}
