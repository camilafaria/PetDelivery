/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 26 20:59:37 GMT 2017
 */

package br.com.petdelivery.controller;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import br.com.petdelivery.controller.HomeUsuarioController;
import br.com.petdelivery.jdbc.modelo.Agenda_Servico;
import br.com.petdelivery.jdbc.modelo.Animal;
import br.com.petdelivery.jdbc.modelo.Usuario;
import java.sql.Date;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletRequestWrapper;
import javax.servlet.http.HttpSession;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HomeUsuarioController_ESTest extends HomeUsuarioController_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HomeUsuarioController homeUsuarioController0 = new HomeUsuarioController();
      HttpSession httpSession0 = mock(HttpSession.class, new ViolatedAssumptionAnswer());
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn(httpSession0).when(httpServletRequest0).getSession();
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      HttpSession httpSession1 = httpServletRequestWrapper0.getSession();
      String string0 = homeUsuarioController0.logout(httpSession1);
      assertEquals("redirect:index", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HomeUsuarioController homeUsuarioController0 = new HomeUsuarioController();
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      // Undeclared exception!
      try { 
        homeUsuarioController0.vizualizaAutonomo(httpServletRequestWrapper0, (HttpSession) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.sql.SQLException: No suitable driver found for jdbc:mysql://null/null?useSSL=null
         //
         verifyException("br.com.petdelivery.jdbc.ConnectionFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HomeUsuarioController homeUsuarioController0 = new HomeUsuarioController();
      // Undeclared exception!
      try { 
        homeUsuarioController0.buscarServicos((HttpServletRequest) null, (HttpSession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("br.com.petdelivery.controller.HomeUsuarioController", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HomeUsuarioController homeUsuarioController0 = new HomeUsuarioController();
      Agenda_Servico agenda_Servico0 = new Agenda_Servico();
      Date date0 = new Date(1L);
      agenda_Servico0.setDataFim(date0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      HttpSession httpSession0 = mock(HttpSession.class, new ViolatedAssumptionAnswer());
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn("", (String) null).when(httpServletRequest0).getParameter(anyString());
      doReturn(stringArray0).when(httpServletRequest0).getParameterValues(anyString());
      doReturn(httpSession0).when(httpServletRequest0).getSession();
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      HttpServletRequestWrapper httpServletRequestWrapper1 = new HttpServletRequestWrapper(httpServletRequestWrapper0);
      HttpSession httpSession1 = httpServletRequestWrapper1.getSession();
      // Undeclared exception!
      try { 
        homeUsuarioController0.buscarServicos(httpServletRequestWrapper1, httpSession1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HomeUsuarioController homeUsuarioController0 = new HomeUsuarioController();
      String[] stringArray0 = new String[4];
      HttpSession httpSession0 = mock(HttpSession.class, new ViolatedAssumptionAnswer());
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn("", "", "q`c~", "", "u'KYDt{W").when(httpServletRequest0).getParameter(anyString());
      doReturn(stringArray0).when(httpServletRequest0).getParameterValues(anyString());
      doReturn(httpSession0).when(httpServletRequest0).getSession();
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      HttpSession httpSession1 = httpServletRequestWrapper0.getSession();
      // Undeclared exception!
      try { 
        homeUsuarioController0.buscarServicos(httpServletRequestWrapper0, httpSession1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.sql.SQLException: No suitable driver found for jdbc:mysql://null/null?useSSL=null
         //
         verifyException("br.com.petdelivery.jdbc.ConnectionFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HomeUsuarioController homeUsuarioController0 = new HomeUsuarioController();
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn("animalCriado", (String) null).when(httpServletRequest0).getParameter(anyString());
      doReturn((String[]) null).when(httpServletRequest0).getParameterValues(anyString());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      // Undeclared exception!
      try { 
        homeUsuarioController0.buscarServicos(httpServletRequestWrapper0, (HttpSession) null);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Integer", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HomeUsuarioController homeUsuarioController0 = new HomeUsuarioController();
      String[] stringArray0 = new String[4];
      HttpSession httpSession0 = mock(HttpSession.class, new ViolatedAssumptionAnswer());
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn("", "=?.", "!T&9O|:Rm'3M").when(httpServletRequest0).getParameter(anyString());
      doReturn(stringArray0).when(httpServletRequest0).getParameterValues(anyString());
      doReturn(httpSession0).when(httpServletRequest0).getSession();
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      HttpSession httpSession1 = httpServletRequestWrapper0.getSession();
      // Undeclared exception!
      try { 
        homeUsuarioController0.buscarServicos(httpServletRequestWrapper0, httpSession1);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"!T&9O|:Rm'3M\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HomeUsuarioController homeUsuarioController0 = new HomeUsuarioController();
      Usuario usuario0 = new Usuario();
      HttpSession httpSession0 = mock(HttpSession.class, new ViolatedAssumptionAnswer());
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn(httpSession0).when(httpServletRequest0).getSession(anyBoolean());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      HttpSession httpSession1 = httpServletRequestWrapper0.getSession(false);
      // Undeclared exception!
      try { 
        homeUsuarioController0.updateUsuario(usuario0, httpSession1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.sql.SQLException: No suitable driver found for jdbc:mysql://null/null?useSSL=null
         //
         verifyException("br.com.petdelivery.jdbc.ConnectionFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HomeUsuarioController homeUsuarioController0 = new HomeUsuarioController();
      // Undeclared exception!
      try { 
        homeUsuarioController0.logout((HttpSession) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("br.com.petdelivery.controller.HomeUsuarioController", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HomeUsuarioController homeUsuarioController0 = new HomeUsuarioController();
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      String string0 = homeUsuarioController0.index(httpServletRequestWrapper0);
      assertEquals("posLogin/usuario/home", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HomeUsuarioController homeUsuarioController0 = new HomeUsuarioController();
      Agenda_Servico agenda_Servico0 = new Agenda_Servico();
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      // Undeclared exception!
      try { 
        homeUsuarioController0.confirmaAgendamento(agenda_Servico0, (HttpSession) null, httpServletRequestWrapper0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.sql.SQLException: No suitable driver found for jdbc:mysql://null/null?useSSL=null
         //
         verifyException("br.com.petdelivery.jdbc.ConnectionFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HomeUsuarioController homeUsuarioController0 = new HomeUsuarioController();
      String string0 = homeUsuarioController0.configConta((HttpServletRequest) null);
      assertEquals("posLogin/usuario/configConta", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HomeUsuarioController homeUsuarioController0 = new HomeUsuarioController();
      String string0 = homeUsuarioController0.buscaFiltroServico();
      assertEquals("posLogin/usuario/buscaFiltroServico", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      HomeUsuarioController homeUsuarioController0 = new HomeUsuarioController();
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(httpServletRequest0).getParameter(anyString());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      // Undeclared exception!
      try { 
        homeUsuarioController0.agendaServicoAutonomo((HttpSession) null, httpServletRequestWrapper0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Long", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      HomeUsuarioController homeUsuarioController0 = new HomeUsuarioController();
      // Undeclared exception!
      try { 
        homeUsuarioController0.avaliarPrestadorAutonomo((HttpServletRequest) null, (HttpSession) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.sql.SQLException: No suitable driver found for jdbc:mysql://null/null?useSSL=null
         //
         verifyException("br.com.petdelivery.jdbc.ConnectionFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      HomeUsuarioController homeUsuarioController0 = new HomeUsuarioController();
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      String string0 = homeUsuarioController0.pets(httpServletRequestWrapper0);
      assertEquals("posLogin/usuario/meusPets", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      HomeUsuarioController homeUsuarioController0 = new HomeUsuarioController();
      HttpSession httpSession0 = mock(HttpSession.class, new ViolatedAssumptionAnswer());
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn(httpSession0).when(httpServletRequest0).getSession(anyBoolean());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      HttpSession httpSession1 = httpServletRequestWrapper0.getSession(true);
      // Undeclared exception!
      try { 
        homeUsuarioController0.adicionaPet((Animal) null, httpSession1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.sql.SQLException: No suitable driver found for jdbc:mysql://null/null?useSSL=null
         //
         verifyException("br.com.petdelivery.jdbc.ConnectionFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      HomeUsuarioController homeUsuarioController0 = new HomeUsuarioController();
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      String string0 = homeUsuarioController0.cadastraPets(httpServletRequestWrapper0);
      assertEquals("posLogin/usuario/cadastraPet", string0);
  }
}
