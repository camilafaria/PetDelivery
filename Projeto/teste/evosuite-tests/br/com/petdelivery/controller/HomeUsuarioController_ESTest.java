/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 25 17:58:06 GMT 2017
 */

package br.com.petdelivery.controller;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import br.com.petdelivery.controller.HomeUsuarioController;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletRequestWrapper;
import javax.servlet.http.HttpSession;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HomeUsuarioController_ESTest extends HomeUsuarioController_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      HomeUsuarioController homeUsuarioController0 = new HomeUsuarioController();
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      String string0 = homeUsuarioController0.pets(httpServletRequestWrapper0);
      assertEquals("posLogin/usuario/meusPets", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      HomeUsuarioController homeUsuarioController0 = new HomeUsuarioController();
      HttpSession httpSession0 = mock(HttpSession.class, new ViolatedAssumptionAnswer());
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn(httpSession0).when(httpServletRequest0).getSession(anyBoolean());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      HttpSession httpSession1 = httpServletRequestWrapper0.getSession(true);
      String string0 = homeUsuarioController0.logout(httpSession1);
      assertEquals("redirect:index", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      HomeUsuarioController homeUsuarioController0 = new HomeUsuarioController();
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      String string0 = homeUsuarioController0.index(httpServletRequestWrapper0);
      assertEquals("posLogin/usuario/home", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      HomeUsuarioController homeUsuarioController0 = new HomeUsuarioController();
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      String string0 = homeUsuarioController0.configConta(httpServletRequestWrapper0);
      assertEquals("posLogin/usuario/configConta", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      HomeUsuarioController homeUsuarioController0 = new HomeUsuarioController();
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      String string0 = homeUsuarioController0.cadastraPets(httpServletRequestWrapper0);
      assertEquals("posLogin/usuario/cadastraPet", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      HomeUsuarioController homeUsuarioController0 = new HomeUsuarioController();
      String string0 = homeUsuarioController0.buscaFiltroServico();
      assertEquals("posLogin/usuario/buscaFiltroServico", string0);
  }
}
