/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 26 20:56:54 GMT 2017
 */

package br.com.petdelivery.controller;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import br.com.petdelivery.controller.HomePrestadorController;
import br.com.petdelivery.jdbc.modelo.Autonomo;
import br.com.petdelivery.jdbc.modelo.Petshop;
import br.com.petdelivery.jdbc.modelo.Servico_Autonomo;
import br.com.petdelivery.jdbc.modelo.Servico_Petshop;
import br.com.petdelivery.jdbc.modelo.Unidade_Petshop;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletRequestWrapper;
import javax.servlet.http.HttpSession;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HomePrestadorController_ESTest extends HomePrestadorController_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HomePrestadorController homePrestadorController0 = new HomePrestadorController();
      String string0 = homePrestadorController0.cadastraServicoAutonomo((HttpSession) null);
      assertEquals("posLogin/prestador/autonomo/cadastraServicoAutonomo", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HomePrestadorController homePrestadorController0 = new HomePrestadorController();
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      String string0 = homePrestadorController0.indexAutonomo(httpServletRequestWrapper0);
      assertEquals("posLogin/prestador/autonomo/home", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HomePrestadorController homePrestadorController0 = new HomePrestadorController();
      String string0 = homePrestadorController0.configuraContaPetshop((HttpSession) null);
      assertEquals("posLogin/prestador/petshop/configConta", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HomePrestadorController homePrestadorController0 = new HomePrestadorController();
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Autonomo autonomo0 = new Autonomo();
      // Undeclared exception!
      try { 
        homePrestadorController0.atualizarAutonomo(autonomo0, (HttpSession) null, httpServletRequestWrapper0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.sql.SQLException: No suitable driver found for jdbc:mysql://null/null?useSSL=null
         //
         verifyException("br.com.petdelivery.jdbc.ConnectionFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HomePrestadorController homePrestadorController0 = new HomePrestadorController();
      // Undeclared exception!
      try { 
        homePrestadorController0.adicionaServicoAutonomo((Servico_Autonomo) null, (HttpSession) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.sql.SQLException: No suitable driver found for jdbc:mysql://null/null?useSSL=null
         //
         verifyException("br.com.petdelivery.jdbc.ConnectionFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HomePrestadorController homePrestadorController0 = new HomePrestadorController();
      String string0 = homePrestadorController0.cadastroServicoPetshop((HttpSession) null);
      assertEquals("posLogin/prestador/petshop/cadastraServicoPetshop", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HomePrestadorController homePrestadorController0 = new HomePrestadorController();
      String string0 = homePrestadorController0.cadastroServico((HttpSession) null);
      assertEquals("posLogin/prestador/petshop/meusServicos", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HomePrestadorController homePrestadorController0 = new HomePrestadorController();
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      Petshop petshop0 = new Petshop();
      // Undeclared exception!
      try { 
        homePrestadorController0.atualizarPetshop(petshop0, (HttpSession) null, httpServletRequestWrapper0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.sql.SQLException: No suitable driver found for jdbc:mysql://null/null?useSSL=null
         //
         verifyException("br.com.petdelivery.jdbc.ConnectionFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HomePrestadorController homePrestadorController0 = new HomePrestadorController();
      String string0 = homePrestadorController0.unidadesPetshop((HttpSession) null);
      assertEquals("posLogin/prestador/petshop/minhasUnidades", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HomePrestadorController homePrestadorController0 = new HomePrestadorController();
      // Undeclared exception!
      try { 
        homePrestadorController0.insertServico((Servico_Petshop) null, (HttpSession) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.sql.SQLException: No suitable driver found for jdbc:mysql://null/null?useSSL=null
         //
         verifyException("br.com.petdelivery.jdbc.ConnectionFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HomePrestadorController homePrestadorController0 = new HomePrestadorController();
      String string0 = homePrestadorController0.cadastroUnidadePetshop((HttpSession) null);
      assertEquals("posLogin/prestador/petshop/cadastraUnidade", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HomePrestadorController homePrestadorController0 = new HomePrestadorController();
      Unidade_Petshop unidade_Petshop0 = new Unidade_Petshop();
      // Undeclared exception!
      try { 
        homePrestadorController0.insertUnidade(unidade_Petshop0, (HttpSession) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.sql.SQLException: No suitable driver found for jdbc:mysql://null/null?useSSL=null
         //
         verifyException("br.com.petdelivery.jdbc.ConnectionFactory", e);
      }
  }
}
