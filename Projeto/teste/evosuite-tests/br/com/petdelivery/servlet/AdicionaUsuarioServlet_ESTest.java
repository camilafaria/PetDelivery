/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 26 21:51:15 GMT 2017
 */

package br.com.petdelivery.servlet;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import br.com.petdelivery.servlet.AdicionaUsuarioServlet;
import java.io.PrintWriter;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletRequestWrapper;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpServletResponseWrapper;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AdicionaUsuarioServlet_ESTest extends AdicionaUsuarioServlet_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      AdicionaUsuarioServlet adicionaUsuarioServlet0 = new AdicionaUsuarioServlet();
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      HttpServletResponse httpServletResponse0 = mock(HttpServletResponse.class, new ViolatedAssumptionAnswer());
      HttpServletResponseWrapper httpServletResponseWrapper0 = new HttpServletResponseWrapper(httpServletResponse0);
      httpServletResponseWrapper0.setResponse(httpServletResponseWrapper0);
      // Undeclared exception!
      try { 
        adicionaUsuarioServlet0.service((HttpServletRequest) httpServletRequestWrapper0, (HttpServletResponse) httpServletResponseWrapper0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      AdicionaUsuarioServlet adicionaUsuarioServlet0 = new AdicionaUsuarioServlet();
      // Undeclared exception!
      try { 
        adicionaUsuarioServlet0.service((HttpServletRequest) null, (HttpServletResponse) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("br.com.petdelivery.servlet.AdicionaUsuarioServlet", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      AdicionaUsuarioServlet adicionaUsuarioServlet0 = new AdicionaUsuarioServlet();
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn("K#A.#C2RB").when(httpServletRequest0).getParameter(anyString());
      HttpServletRequestWrapper httpServletRequestWrapper0 = new HttpServletRequestWrapper(httpServletRequest0);
      HttpServletResponse httpServletResponse0 = mock(HttpServletResponse.class, new ViolatedAssumptionAnswer());
      doReturn((PrintWriter) null).when(httpServletResponse0).getWriter();
      HttpServletResponseWrapper httpServletResponseWrapper0 = new HttpServletResponseWrapper(httpServletResponse0);
      // Undeclared exception!
      try { 
        adicionaUsuarioServlet0.service((HttpServletRequest) httpServletRequestWrapper0, (HttpServletResponse) httpServletResponseWrapper0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"K#A.#C2RB\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }
}
